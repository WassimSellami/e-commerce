{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/product-form.service\";\nexport class ProductFormComponent {\n  constructor(route, formBuilder, productFormService) {\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.productFormService = productFormService;\n    this.addMode = false;\n    this.editMode = false;\n    this.edit = () => {};\n    this.add = () => {\n      this.productForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        price: ['', Validators.required],\n        description: ['', Validators.required],\n        quantityInStock: ['', Validators.required]\n      });\n    };\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      if (this.id) {\n        this.editMode = true;\n        this.edit();\n      } else {\n        this.addMode = true;\n        this.add();\n      }\n    });\n  }\n}\n_class = ProductFormComponent;\n_class.ɵfac = function ProductFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ProductFormService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-product-form\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", \"required\", \"\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"required\", \"\"], [\"for\", \"quantityInStock\"], [\"type\", \"number\", \"id\", \"quantityInStock\", \"formControlName\", \"quantityInStock\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function ProductFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ProductFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"textarea\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Quantity in Stock:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 9);\n      i0.ɵɵtext(18, \"Add Product\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"disabled\", !ctx.productForm.valid);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nfunction validatePrice(control) {\n  const price = control.value;\n  if (price >= 1) {\n    return null; // No error, valid\n  } else {\n    return {\n      invalidPrice: true\n    }; // Error, invalid\n  }\n}\n\nonSubmit = () => {\n  const formValue = this.productForm.value;\n  const details = {\n    \"id\": this.id,\n    \"price\": formValue.price,\n    \"name\": formValue.name,\n    \"description\": formValue.description,\n    \"quantityInStock\": formValue.quantityInStock\n  };\n  console.log(details);\n  if (this.addMode) {\n    this.productFormService.addProduct(details).subscribe(response => {\n      window.alert('Product added successfully !');\n      this.productForm.reset();\n    }, error => {\n      window.alert('Product not added: ' + error);\n    });\n  } else {\n    this.productFormService.editProduct(details).subscribe(response => {\n      window.alert('Product updated successfully !');\n    }, error => {\n      window.alert('Product not updated: ' + error);\n    });\n  }\n};","map":{"version":3,"names":["Validators","ProductFormComponent","constructor","route","formBuilder","productFormService","addMode","editMode","edit","add","productForm","group","name","required","price","description","quantityInStock","ngOnInit","params","subscribe","id","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","FormBuilder","i3","ProductFormService","selectors","decls","vars","consts","template","ProductFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ProductFormComponent_Template_form_ngSubmit_0_listener","onSubmit","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","valid","validatePrice","control","value","invalidPrice","formValue","details","console","log","addProduct","response","window","alert","reset","error","editProduct"],"sources":["D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\pages\\product-form\\product-form.component.ts","D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\pages\\product-form\\product-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProductFormService } from 'src/app/services/product-form.service';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  addMode: boolean = false;\n  editMode: boolean = false;\n  productForm!: FormGroup;\n  id: number | undefined;\n  constructor(\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private productFormService: ProductFormService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.id = params['id']\n      if (this.id) {\n        this.editMode = true;\n        this.edit();\n      }\n      else {\n        this.addMode = true\n        this.add();\n      }\n    })\n  }\n\n  edit = () => {\n  }\n\n  add = () => {\n    this.productForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: ['', Validators.required],\n      description: ['', Validators.required],\n      quantityInStock: ['', Validators.required],\n    });\n  }\n\n  function validatePrice(control: AbstractControl): ValidationErrors | null {\n  const price = control.value;\n  if (price >= 1) {\n    return null; // No error, valid\n  } else {\n    return { invalidPrice: true }; // Error, invalid\n  }\n}\n\nonSubmit = () => {\n  const formValue = this.productForm.value;\n  const details = {\n    \"id\": this.id,\n    \"price\": formValue.price,\n    \"name\": formValue.name,\n    \"description\": formValue.description,\n    \"quantityInStock\": formValue.quantityInStock\n  }; console.log(details);\n  if (this.addMode) {\n    this.productFormService.addProduct(details).subscribe(\n      (response) => {\n        window.alert('Product added successfully !')\n        this.productForm.reset();\n      },\n      (error) => {\n        window.alert('Product not added: ' + error);\n      }\n    );\n  }\n  else {\n    this.productFormService.editProduct(details).subscribe(\n      (response) => {\n        window.alert('Product updated successfully !')\n      },\n      (error) => {\n        window.alert('Product not updated: ' + error);\n      }\n    );\n  }\n}\n}\n","<form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\" required>\n    </div>\n\n    <div>\n        <label for=\"price\">Price:</label>\n        <input type=\"number\" id=\"price\" formControlName=\"price\" required>\n    </div>\n\n    <div>\n        <label for=\"description\">Description:</label>\n        <textarea id=\"description\" formControlName=\"description\" required></textarea>\n    </div>\n\n    <div>\n        <label for=\"quantityInStock\">Quantity in Stock:</label>\n        <input type=\"number\" id=\"quantityInStock\" formControlName=\"quantityInStock\" required>\n    </div>\n\n    <button type=\"submit\" [disabled]=\"!productForm.valid\">Add Product</button>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}