{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = 'http://localhost:4200/api/';\n    this.cartProducts = [];\n    this.productQuantity = new Map();\n    this.cartProductsPrice = 0;\n    this.createOrder = orderDetails => {\n      const url = `${this.baseURL}orders/create`;\n      return this.http.post(url, orderDetails);\n    };\n  }\n  addToCart(product, quantity) {\n    this.cartProducts.push(product);\n    this.productQuantity.set(product.id, (this.productQuantity.get(product.id) || 0) + quantity);\n    this.updateCartProductsPrice(product.price, quantity);\n    window.alert(this.productQuantity.size);\n  }\n  updateCartProductsPrice(price, quantity) {\n    this.cartProductsPrice += price * quantity;\n  }\n  clearCart() {\n    this.productQuantity.clear();\n    this.cartProducts = [];\n  }\n  getShippingPrices() {\n    return this.http.get('/assets/shipping.json');\n  }\n  getShippingPrice() {\n    return 10;\n  }\n  // getters\n  getProductQuantity() {\n    return this.productQuantity;\n  }\n  getCartProducts() {\n    return this.cartProducts;\n  }\n  getCartProdcutsPrice() {\n    return this.cartProductsPrice;\n  }\n}\n_class = CartService;\n_class.ɵfac = function CartService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CartService","constructor","http","baseURL","cartProducts","productQuantity","Map","cartProductsPrice","createOrder","orderDetails","url","post","addToCart","product","quantity","push","set","id","get","updateCartProductsPrice","price","window","alert","size","clearCart","clear","getShippingPrices","getShippingPrice","getProductQuantity","getCartProducts","getCartProdcutsPrice","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Product } from '../products';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  baseURL = 'http://localhost:4200/api/';\n  cartProducts: Product[] = [];\n  productQuantity: Map<number, number> = new Map();\n  cartProductsPrice: number = 0;\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  addToCart(product: Product, quantity: number) {\n    this.cartProducts.push(product);\n    this.productQuantity.set(product.id, (this.productQuantity.get(product.id) || 0) + quantity);\n    this.updateCartProductsPrice(product.price, quantity);\n    window.alert(this.productQuantity.size);\n  }\n\n  updateCartProductsPrice(price: number, quantity: number) {\n    this.cartProductsPrice += price * quantity\n  }\n\n  clearCart() {\n    this.productQuantity.clear();\n    this.cartProducts = []\n  }\n\n  getShippingPrices() {\n    return this.http.get<{ type: string, price: number }[]>('/assets/shipping.json');\n  }\n\n  getShippingPrice(): number {\n    return 10;\n  }\n\n  createOrder = (orderDetails: any) => {\n    const url = `${this.baseURL}orders/create`;\n    return this.http.post(url, orderDetails);\n  }\n\n  // getters\n  getProductQuantity() {\n    return this.productQuantity;\n  }\n\n  getCartProducts() {\n    return this.cartProducts;\n  }\n\n  getCartProdcutsPrice() {\n    return this.cartProductsPrice;\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,WAAW;EAKtBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALd,KAAAC,OAAO,GAAG,4BAA4B;IACtC,KAAAC,YAAY,GAAc,EAAE;IAC5B,KAAAC,eAAe,GAAwB,IAAIC,GAAG,EAAE;IAChD,KAAAC,iBAAiB,GAAW,CAAC;IA6B7B,KAAAC,WAAW,GAAIC,YAAiB,IAAI;MAClC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,eAAe;MAC1C,OAAO,IAAI,CAACD,IAAI,CAACS,IAAI,CAACD,GAAG,EAAED,YAAY,CAAC;IAC1C,CAAC;EA7BG;EAEJG,SAASA,CAACC,OAAgB,EAAEC,QAAgB;IAC1C,IAAI,CAACV,YAAY,CAACW,IAAI,CAACF,OAAO,CAAC;IAC/B,IAAI,CAACR,eAAe,CAACW,GAAG,CAACH,OAAO,CAACI,EAAE,EAAE,CAAC,IAAI,CAACZ,eAAe,CAACa,GAAG,CAACL,OAAO,CAACI,EAAE,CAAC,IAAI,CAAC,IAAIH,QAAQ,CAAC;IAC5F,IAAI,CAACK,uBAAuB,CAACN,OAAO,CAACO,KAAK,EAAEN,QAAQ,CAAC;IACrDO,MAAM,CAACC,KAAK,CAAC,IAAI,CAACjB,eAAe,CAACkB,IAAI,CAAC;EACzC;EAEAJ,uBAAuBA,CAACC,KAAa,EAAEN,QAAgB;IACrD,IAAI,CAACP,iBAAiB,IAAIa,KAAK,GAAGN,QAAQ;EAC5C;EAEAU,SAASA,CAAA;IACP,IAAI,CAACnB,eAAe,CAACoB,KAAK,EAAE;IAC5B,IAAI,CAACrB,YAAY,GAAG,EAAE;EACxB;EAEAsB,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACxB,IAAI,CAACgB,GAAG,CAAoC,uBAAuB,CAAC;EAClF;EAEAS,gBAAgBA,CAAA;IACd,OAAO,EAAE;EACX;EAOA;EACAC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACvB,eAAe;EAC7B;EAEAwB,eAAeA,CAAA;IACb,OAAO,IAAI,CAACzB,YAAY;EAC1B;EAEA0B,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACvB,iBAAiB;EAC/B;;SAjDWP,WAAW;;mBAAXA,MAAW,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXlC,MAAW;EAAAmC,OAAA,EAAXnC,MAAW,CAAAoC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}