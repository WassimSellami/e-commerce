{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CartComponent = class CartComponent {\n  constructor(cartService, formBuilder) {\n    this.cartService = cartService;\n    this.formBuilder = formBuilder;\n    this.productQuantity = this.cartService.getProductQuantity();\n    this.items = this.cartService.getCartProducts();\n    this.cartProductsPrice = 0;\n    this.shippingPrice = 0;\n    this.orderTotalPrice = 0;\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n  }\n  getOrderTotalPrice() {\n    this.cartProductsPrice = this.cartService.getCartProdcutsPrice();\n    this.shippingPrice = this.cartService.getShippingPrice();\n    return this.orderTotalPrice = this.cartProductsPrice + this.shippingPrice;\n  }\n  onSubmit() {\n    const productQuantityArray = Array.from(this.productQuantity, ([id, quantity]) => ({\n      id,\n      quantity\n    }));\n    const orderDetails = {\n      \"orderDetails\": {\n        \"price\": this.orderTotalPrice,\n        \"name\": this.checkoutForm.value.name,\n        \"address\": this.checkoutForm.value.address,\n        \"productsData\": productQuantityArray\n      }\n    };\n    this.cartService.createOrder(orderDetails).subscribe(response => {\n      console.log(response);\n      window.alert('Successful Operation');\n      this.cartService.clearCart();\n      this.checkoutForm.reset();\n      this.items = [];\n    }, error => {\n      console.error('Internal Server Error: Order Not Created', error);\n      window.alert('Something went wrong please try again');\n    });\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"names":["Component","CartComponent","constructor","cartService","formBuilder","productQuantity","getProductQuantity","items","getCartProducts","cartProductsPrice","shippingPrice","orderTotalPrice","checkoutForm","group","name","address","getOrderTotalPrice","getCartProdcutsPrice","getShippingPrice","onSubmit","productQuantityArray","Array","from","id","quantity","orderDetails","value","createOrder","subscribe","response","console","log","window","alert","clearCart","reset","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { CartService } from '../services/cart.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n  productQuantity = this.cartService.getProductQuantity();\n  items = this.cartService.getCartProducts();\n  cartProductsPrice = 0\n  shippingPrice = 0\n  orderTotalPrice = 0\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  getOrderTotalPrice(): number {\n    this.cartProductsPrice = this.cartService.getCartProdcutsPrice();\n    this.shippingPrice = this.cartService.getShippingPrice();\n    return this.orderTotalPrice = this.cartProductsPrice + this.shippingPrice;\n  }\n\n  onSubmit(): void {\n    const productQuantityArray = Array.from(this.productQuantity, ([id, quantity]) => ({ id, quantity }));\n    const orderDetails = {\n      \"orderDetails\": {\n        \"price\": this.orderTotalPrice,\n        \"name\": this.checkoutForm.value.name,\n        \"address\": this.checkoutForm.value.address,\n        \"productsData\": productQuantityArray\n      }\n    }\n    this.cartService.createOrder(orderDetails).subscribe(\n      (response) => {\n        console.log(response);\n        window.alert('Successful Operation');\n        this.cartService.clearCart();\n        this.checkoutForm.reset();\n        this.items = [];\n      },\n      (error) => {\n        console.error('Internal Server Error: Order Not Created', error);\n        window.alert('Something went wrong please try again');\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAWxBC,YACUC,WAAwB,EACxBC,WAAwB;IADxB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IAZrB,KAAAC,eAAe,GAAG,IAAI,CAACF,WAAW,CAACG,kBAAkB,EAAE;IACvD,KAAAC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE;IAC1C,KAAAC,iBAAiB,GAAG,CAAC;IACrB,KAAAC,aAAa,GAAG,CAAC;IACjB,KAAAC,eAAe,GAAG,CAAC;IACnB,KAAAC,YAAY,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC;MACpCC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;KACV,CAAC;EAKE;EAEJC,kBAAkBA,CAAA;IAChB,IAAI,CAACP,iBAAiB,GAAG,IAAI,CAACN,WAAW,CAACc,oBAAoB,EAAE;IAChE,IAAI,CAACP,aAAa,GAAG,IAAI,CAACP,WAAW,CAACe,gBAAgB,EAAE;IACxD,OAAO,IAAI,CAACP,eAAe,GAAG,IAAI,CAACF,iBAAiB,GAAG,IAAI,CAACC,aAAa;EAC3E;EAEAS,QAAQA,CAAA;IACN,MAAMC,oBAAoB,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACjB,eAAe,EAAE,CAAC,CAACkB,EAAE,EAAEC,QAAQ,CAAC,MAAM;MAAED,EAAE;MAAEC;IAAQ,CAAE,CAAC,CAAC;IACrG,MAAMC,YAAY,GAAG;MACnB,cAAc,EAAE;QACd,OAAO,EAAE,IAAI,CAACd,eAAe;QAC7B,MAAM,EAAE,IAAI,CAACC,YAAY,CAACc,KAAK,CAACZ,IAAI;QACpC,SAAS,EAAE,IAAI,CAACF,YAAY,CAACc,KAAK,CAACX,OAAO;QAC1C,cAAc,EAAEK;;KAEnB;IACD,IAAI,CAACjB,WAAW,CAACwB,WAAW,CAACF,YAAY,CAAC,CAACG,SAAS,CACjDC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBG,MAAM,CAACC,KAAK,CAAC,sBAAsB,CAAC;MACpC,IAAI,CAAC9B,WAAW,CAAC+B,SAAS,EAAE;MAC5B,IAAI,CAACtB,YAAY,CAACuB,KAAK,EAAE;MACzB,IAAI,CAAC5B,KAAK,GAAG,EAAE;IACjB,CAAC,EACA6B,KAAK,IAAI;MACRN,OAAO,CAACM,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAChEJ,MAAM,CAACC,KAAK,CAAC,uCAAuC,CAAC;IACvD,CAAC,CACF;EACH;CACD;AA9CYhC,aAAa,GAAAoC,UAAA,EALzBrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWvC,aAAa,CA8CzB;SA9CYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}