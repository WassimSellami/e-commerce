{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = 'http://localhost:4200/api/';\n    this.productQuantity = new Map();\n    this.createOrder = orderDetails => {\n      const url = `${this.baseURL}orders/create`;\n      return this.http.post(url, orderDetails);\n    };\n  }\n  addToCart(product, quantity) {\n    if (this.productQuantity.has(product)) {\n      this.productQuantity.set(product, this.productQuantity.get(product) + quantity);\n    } else {\n      this.productQuantity.set(product, quantity);\n    }\n  }\n  getProductsData() {\n    return this.productQuantity;\n  }\n  clearCart() {\n    this.productQuantity.clear();\n  }\n  getShippingPrices() {\n    return this.http.get('/assets/shipping.json');\n  }\n  getItemsPrice() {\n    var price = 0;\n    this.productQuantity.forEach((quantity, product) => {\n      price += product.price * quantity;\n    });\n    return price;\n  }\n  getShippingPrice() {\n    return 10;\n  }\n}\n_class = CartService;\n_class.ɵfac = function CartService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CartService","constructor","http","baseURL","productQuantity","Map","createOrder","orderDetails","url","post","addToCart","product","quantity","has","set","get","getProductsData","clearCart","clear","getShippingPrices","getItemsPrice","price","forEach","getShippingPrice","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Product } from '../products';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  baseURL = 'http://localhost:4200/api/';\n  productQuantity: Map<Product, number> = new Map();\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  addToCart(product: Product, quantity: number) {\n    if (this.productQuantity.has(product)) {\n      this.productQuantity.set(product, this.productQuantity.get(product)! + quantity);\n    } else {\n      this.productQuantity.set(product, quantity);\n    }\n  }\n\n  getProductsData() {\n    return this.productQuantity;\n  }\n\n  clearCart() {\n    this.productQuantity.clear();\n  }\n\n  getShippingPrices() {\n    return this.http.get<{ type: string, price: number }[]>('/assets/shipping.json');\n  }\n\n  getItemsPrice(): number {\n    var price = 0;\n    this.productQuantity.forEach((quantity, product) => {\n      price += product.price * quantity;\n    });\n    return price;\n  }\n\n  getShippingPrice(): number {\n    return 10;\n  }\n\n  createOrder = (orderDetails: any) => {\n    const url = `${this.baseURL}orders/create`;\n    return this.http.post(url, orderDetails);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,WAAW;EAItBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJd,KAAAC,OAAO,GAAG,4BAA4B;IACtC,KAAAC,eAAe,GAAyB,IAAIC,GAAG,EAAE;IAsCjD,KAAAC,WAAW,GAAIC,YAAiB,IAAI;MAClC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,OAAO,eAAe;MAC1C,OAAO,IAAI,CAACD,IAAI,CAACO,IAAI,CAACD,GAAG,EAAED,YAAY,CAAC;IAC1C,CAAC;EArCG;EAEJG,SAASA,CAACC,OAAgB,EAAEC,QAAgB;IAC1C,IAAI,IAAI,CAACR,eAAe,CAACS,GAAG,CAACF,OAAO,CAAC,EAAE;MACrC,IAAI,CAACP,eAAe,CAACU,GAAG,CAACH,OAAO,EAAE,IAAI,CAACP,eAAe,CAACW,GAAG,CAACJ,OAAO,CAAE,GAAGC,QAAQ,CAAC;KACjF,MAAM;MACL,IAAI,CAACR,eAAe,CAACU,GAAG,CAACH,OAAO,EAAEC,QAAQ,CAAC;;EAE/C;EAEAI,eAAeA,CAAA;IACb,OAAO,IAAI,CAACZ,eAAe;EAC7B;EAEAa,SAASA,CAAA;IACP,IAAI,CAACb,eAAe,CAACc,KAAK,EAAE;EAC9B;EAEAC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACjB,IAAI,CAACa,GAAG,CAAoC,uBAAuB,CAAC;EAClF;EAEAK,aAAaA,CAAA;IACX,IAAIC,KAAK,GAAG,CAAC;IACb,IAAI,CAACjB,eAAe,CAACkB,OAAO,CAAC,CAACV,QAAQ,EAAED,OAAO,KAAI;MACjDU,KAAK,IAAIV,OAAO,CAACU,KAAK,GAAGT,QAAQ;IACnC,CAAC,CAAC;IACF,OAAOS,KAAK;EACd;EAEAE,gBAAgBA,CAAA;IACd,OAAO,EAAE;EACX;;SAtCWvB,WAAW;;mBAAXA,MAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX3B,MAAW;EAAA4B,OAAA,EAAX5B,MAAW,CAAA6B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}