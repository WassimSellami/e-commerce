{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = 'http://localhost:4200/api/';\n    this.cartProducts = [];\n    this.productQuantity = new Map();\n    this.cartProductsPrice = 0;\n    this.createOrder = orderDetails => {\n      const url = `${this.baseURL}orders/create`;\n      return this.http.post(url, orderDetails);\n    };\n  }\n  saveToLocalStorage() {\n    // Save data to local storage\n    localStorage.setItem('productQuantity', JSON.stringify(Array.from(this.productQuantity.entries())));\n    localStorage.setItem('cartProducts', JSON.stringify(this.cartProducts()));\n    localStorage.setItem('cartProductsPrice', this.getCartProdcutsPrice().toString());\n    // localStorage.setItem('orderTotalPrice', this.orderTotalPrice.toString());\n  }\n\n  addToCart(product, quantity) {\n    this.updateCartProducts(product);\n    this.productQuantity.set(product.id, (this.productQuantity.get(product.id) || 0) + quantity);\n    this.updateCartProductsPrice(product.price, quantity, true);\n  }\n  updateCartProducts(product) {\n    if (!this.productQuantity.has(product.id)) {\n      this.cartProducts.push(product);\n    }\n  }\n  deleteCartProduct(product) {\n    this.productQuantity.delete(product.id);\n    const index = this.cartProducts.indexOf(product);\n    this.cartProducts.splice(index, 1);\n  }\n  clearCart() {\n    this.productQuantity.clear();\n    this.cartProducts = [];\n  }\n  updateCartProductsPrice(price, quantity, add) {\n    this.cartProductsPrice += price * quantity * (add ? 1 : -1);\n    console.log(this.cartProductsPrice);\n  }\n  getShippingPrices() {\n    return this.http.get('/assets/shipping.json');\n  }\n  getShippingPrice() {\n    return 10;\n  }\n  // getters\n  getProductQuantity() {\n    return this.productQuantity;\n  }\n  getCartProducts() {\n    return this.cartProducts;\n  }\n  getCartProdcutsPrice() {\n    return this.cartProductsPrice;\n  }\n}\n_class = CartService;\n_class.ɵfac = function CartService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CartService","constructor","http","baseURL","cartProducts","productQuantity","Map","cartProductsPrice","createOrder","orderDetails","url","post","saveToLocalStorage","localStorage","setItem","JSON","stringify","Array","from","entries","getCartProdcutsPrice","toString","addToCart","product","quantity","updateCartProducts","set","id","get","updateCartProductsPrice","price","has","push","deleteCartProduct","delete","index","indexOf","splice","clearCart","clear","add","console","log","getShippingPrices","getShippingPrice","getProductQuantity","getCartProducts","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Product } from '../products';\nimport { Injectable } from '@angular/core';\nimport { promise } from 'protractor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  baseURL = 'http://localhost:4200/api/';\n  cartProducts: Product[] = [];\n  productQuantity: Map<number, number> = new Map();\n  cartProductsPrice: number = 0;\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  saveToLocalStorage(): void {\n    // Save data to local storage\n    localStorage.setItem('productQuantity', JSON.stringify(Array.from(this.productQuantity.entries())));\n    localStorage.setItem('cartProducts', JSON.stringify(this.cartProducts()));\n    localStorage.setItem('cartProductsPrice', this.getCartProdcutsPrice().toString());\n    // localStorage.setItem('orderTotalPrice', this.orderTotalPrice.toString());\n  }\n\n  addToCart(product: Product, quantity: number) {\n    this.updateCartProducts(product);\n    this.productQuantity.set(product.id, (this.productQuantity.get(product.id) || 0) + quantity);\n    this.updateCartProductsPrice(product.price, quantity, true);\n  }\n\n  updateCartProducts(product: Product) {\n    if (!this.productQuantity.has(product.id)) {\n      this.cartProducts.push(product);\n    }\n  }\n\n  deleteCartProduct(product: Product) {\n    this.productQuantity.delete(product.id);\n    const index = this.cartProducts.indexOf(product);\n    this.cartProducts.splice(index, 1);\n  }\n\n  clearCart() {\n    this.productQuantity.clear();\n    this.cartProducts = []\n  }\n\n  updateCartProductsPrice(price: number, quantity: number, add: boolean) {\n    this.cartProductsPrice += price * quantity * (add ? 1 : -1);\n    console.log(this.cartProductsPrice);\n  }\n\n  getShippingPrices() {\n    return this.http.get<{ type: string, price: number }[]>('/assets/shipping.json');\n  }\n\n  getShippingPrice(): number {\n    return 10;\n  }\n\n  createOrder = (orderDetails: any) => {\n    const url = `${this.baseURL}orders/create`;\n    return this.http.post(url, orderDetails);\n  }\n\n  // getters\n  getProductQuantity() {\n    return this.productQuantity;\n  }\n\n  getCartProducts() {\n    return this.cartProducts;\n  }\n\n  getCartProdcutsPrice() {\n    return this.cartProductsPrice;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}