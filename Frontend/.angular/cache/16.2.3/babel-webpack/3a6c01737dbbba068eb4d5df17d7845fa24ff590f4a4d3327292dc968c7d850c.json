{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet ProductFormComponent = class ProductFormComponent {\n  constructor(route, router, formBuilder, productFormService, productDetailsService) {\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.productFormService = productFormService;\n    this.productDetailsService = productDetailsService;\n    this.addMode = false;\n    this.editMode = false;\n    this.edit = () => {\n      this.productDetailsService.getProductDetails(this.id).subscribe(data => {\n        const product = data;\n        this.productForm = this.formBuilder.group({\n          name: [product.name, Validators.required],\n          price: [product.price, Validators.required],\n          description: [product.description, Validators.required],\n          quantityInStock: [product.quantityInStock, Validators.required]\n        });\n      });\n    };\n    this.add = () => {\n      this.productForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        price: ['', Validators.required],\n        description: ['', Validators.required],\n        quantityInStock: ['', Validators.required]\n      });\n    };\n    this.onSubmit = () => {\n      const formValue = this.productForm.value;\n      const details = {\n        \"id\": this.id,\n        \"price\": formValue.price,\n        \"name\": formValue.name,\n        \"description\": formValue.description,\n        \"quantityInStock\": formValue.quantityInStock\n      };\n      if (this.addMode) {\n        this.productFormService.addProduct(details).subscribe(response => {\n          window.alert('Product added successfully !');\n          this.router.navigate(['/productForm']);\n        }, error => {\n          window.alert('Product not added: ' + error);\n        });\n      } else {\n        this.productFormService.editProduct(details).subscribe(response => {\n          window.alert('Product updated successfully !');\n        }, error => {\n          window.alert('Product not updated: ' + error);\n        });\n      }\n    };\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      if (this.id) {\n        this.editMode = true;\n        this.edit();\n      } else {\n        this.addMode = true;\n        this.add();\n      }\n    });\n  }\n};\nProductFormComponent = __decorate([Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})], ProductFormComponent);\nexport { ProductFormComponent };","map":{"version":3,"names":["Component","Validators","ProductFormComponent","constructor","route","router","formBuilder","productFormService","productDetailsService","addMode","editMode","edit","getProductDetails","id","subscribe","data","product","productForm","group","name","required","price","description","quantityInStock","add","onSubmit","formValue","value","details","addProduct","response","window","alert","navigate","error","editProduct","ngOnInit","params","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\pages\\product-form\\product-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, ValidationErrors, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { ProductFormService } from 'src/app/services/product-form.service';\nimport { ProductDetailService } from 'src/app/services/product-detail.service';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  addMode: boolean = false;\n  editMode: boolean = false;\n  productForm!: FormGroup;\n  id: number | undefined;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private productFormService: ProductFormService,\n    private productDetailsService: ProductDetailService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.id = params['id']\n      if (this.id) {\n        this.editMode = true;\n        this.edit();\n      }\n      else {\n        this.addMode = true\n        this.add();\n      }\n    })\n  }\n\n  edit = () => {\n    this.productDetailsService.getProductDetails(this.id).subscribe((data) => {\n      const product = data;\n      this.productForm = this.formBuilder.group({\n        name: [product.name, Validators.required],\n        price: [product.price, Validators.required],\n        description: [product.description, Validators.required],\n        quantityInStock: [product.quantityInStock, Validators.required],\n      });\n    });\n\n  }\n\n  add = () => {\n    this.productForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      price: ['', Validators.required],\n      description: ['', Validators.required],\n      quantityInStock: ['', Validators.required],\n    });\n  }\n\n  onSubmit = () => {\n    const formValue = this.productForm.value;\n    const details = {\n      \"id\": this.id,\n      \"price\": formValue.price,\n      \"name\": formValue.name,\n      \"description\": formValue.description,\n      \"quantityInStock\": formValue.quantityInStock\n    };\n    if (this.addMode) {\n      this.productFormService.addProduct(details).subscribe(\n        (response) => {\n          window.alert('Product added successfully !')\n          this.router.navigate(['/productForm']);\n        },\n        (error) => {\n          window.alert('Product not added: ' + error);\n        }\n      );\n    }\n    else {\n      this.productFormService.editProduct(details).subscribe(\n        (response) => {\n          window.alert('Product updated successfully !')\n        },\n        (error) => {\n          window.alert('Product not updated: ' + error);\n        }\n      );\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}