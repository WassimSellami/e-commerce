{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nexport class ProductFormComponent {\n  constructor(route) {\n    this.route = route;\n    this.addMode = false;\n    this.editMode = false;\n    this.edit = id => {\n      window.alert(id);\n    };\n    this.add = () => {\n      this.productForm = this.formBuilder.group({\n        name: [''],\n        price: [''],\n        description: [''],\n        quantityInStock: ['']\n      });\n      window.alert('add');\n    };\n    this.onSubmit = () => {\n      window.alert(\"submitted\");\n    };\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.editMode = true;\n        this.edit(params['id']);\n      } else {\n        this.addMode = true;\n        this.add();\n      }\n    });\n  }\n}\n_class = ProductFormComponent;\n_class.ɵfac = function ProductFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-product-form\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", \"required\", \"\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\"], [\"for\", \"quantityInStock\"], [\"type\", \"number\", \"id\", \"quantityInStock\", \"formControlName\", \"quantityInStock\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function ProductFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ProductFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"textarea\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Quantity in Stock:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 9);\n      i0.ɵɵtext(18, \"Add Product\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ProductFormComponent","constructor","route","addMode","editMode","edit","id","window","alert","add","productForm","formBuilder","group","name","price","description","quantityInStock","onSubmit","ngOnInit","params","subscribe","i0","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","decls","vars","consts","template","ProductFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ProductFormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\pages\\product-form\\product-form.component.ts","D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\pages\\product-form\\product-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Route } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  addMode: boolean = false;\n  editMode: boolean = false;\n  productForm!: FormGroup;\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.editMode = true;\n        this.edit(params['id']);\n      }\n      else {\n        this.addMode = true\n        this.add();\n      }\n    })\n  }\n\n  edit = (id: number) => {\n    window.alert(id);\n  }\n\n  add = () => {\n    this.productForm = this.formBuilder.group({\n      name: [''],\n      price: [''],\n      description: [''],\n      quantityInStock: [''],\n    });\n    window.alert('add');\n  }\n  onSubmit = () => {\n    window.alert(\"submitted\")\n  }\n}\n","<form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\" required>\n    </div>\n\n    <div>\n        <label for=\"price\">Price:</label>\n        <input type=\"number\" id=\"price\" formControlName=\"price\" required>\n    </div>\n\n    <div>\n        <label for=\"description\">Description:</label>\n        <textarea id=\"description\" formControlName=\"description\"></textarea>\n    </div>\n\n    <div>\n        <label for=\"quantityInStock\">Quantity in Stock:</label>\n        <input type=\"number\" id=\"quantityInStock\" formControlName=\"quantityInStock\" required>\n    </div>\n\n    <button type=\"submit\">Add Product</button>\n</form>"],"mappings":";;;;AASA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;IAJf,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,QAAQ,GAAY,KAAK;IAmBzB,KAAAC,IAAI,GAAIC,EAAU,IAAI;MACpBC,MAAM,CAACC,KAAK,CAACF,EAAE,CAAC;IAClB,CAAC;IAED,KAAAG,GAAG,GAAG,MAAK;MACT,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,WAAW,CAACC,KAAK,CAAC;QACxCC,IAAI,EAAE,CAAC,EAAE,CAAC;QACVC,KAAK,EAAE,CAAC,EAAE,CAAC;QACXC,WAAW,EAAE,CAAC,EAAE,CAAC;QACjBC,eAAe,EAAE,CAAC,EAAE;OACrB,CAAC;MACFT,MAAM,CAACC,KAAK,CAAC,KAAK,CAAC;IACrB,CAAC;IACD,KAAAS,QAAQ,GAAG,MAAK;MACdV,MAAM,CAACC,KAAK,CAAC,WAAW,CAAC;IAC3B,CAAC;EA9BG;EAEJU,QAAQA,CAAA;IACN,IAAI,CAAChB,KAAK,CAACiB,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAIA,MAAM,CAAC,IAAI,CAAC,EAAE;QAChB,IAAI,CAACf,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACC,IAAI,CAACc,MAAM,CAAC,IAAI,CAAC,CAAC;OACxB,MACI;QACH,IAAI,CAAChB,OAAO,GAAG,IAAI;QACnB,IAAI,CAACM,GAAG,EAAE;;IAEd,CAAC,CAAC;EACJ;;SAnBWT,oBAAoB;;mBAApBA,MAAoB,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAApBxB,MAAoB;EAAAyB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjCV,EAAA,CAAAY,cAAA,cAAwD;MAAxBZ,EAAA,CAAAa,UAAA,sBAAAC,uDAAA;QAAA,OAAYH,GAAA,CAAAf,QAAA,EAAU;MAAA,EAAC;MACnDI,EAAA,CAAAY,cAAA,UAAK;MACiBZ,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAC/BhB,EAAA,CAAAiB,SAAA,eAA6D;MACjEjB,EAAA,CAAAgB,YAAA,EAAM;MAENhB,EAAA,CAAAY,cAAA,UAAK;MACkBZ,EAAA,CAAAe,MAAA,aAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACjChB,EAAA,CAAAiB,SAAA,eAAiE;MACrEjB,EAAA,CAAAgB,YAAA,EAAM;MAENhB,EAAA,CAAAY,cAAA,UAAK;MACwBZ,EAAA,CAAAe,MAAA,oBAAY;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAC7ChB,EAAA,CAAAiB,SAAA,mBAAoE;MACxEjB,EAAA,CAAAgB,YAAA,EAAM;MAENhB,EAAA,CAAAY,cAAA,WAAK;MAC4BZ,EAAA,CAAAe,MAAA,0BAAkB;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACvDhB,EAAA,CAAAiB,SAAA,gBAAqF;MACzFjB,EAAA,CAAAgB,YAAA,EAAM;MAENhB,EAAA,CAAAY,cAAA,iBAAsB;MAAAZ,EAAA,CAAAe,MAAA,mBAAW;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MArBxChB,EAAA,CAAAkB,UAAA,cAAAP,GAAA,CAAAtB,WAAA,CAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}