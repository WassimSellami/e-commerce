{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CartComponent = class CartComponent {\n  constructor(cartService, formBuilder) {\n    this.cartService = cartService;\n    this.formBuilder = formBuilder;\n    this.currency = \"TND\";\n    this.items = this.cartService.getItems();\n    this.itemsPrice = 0;\n    this.shippingPrice = 0;\n    this.orderTotalPrice = 0;\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n  }\n  getItemsPrice() {\n    this.itemsPrice = 0;\n    this.items.forEach(item => {\n      this.itemsPrice += item.price;\n    });\n  }\n  getShippingPrice() {\n    this.shippingPrice = 10;\n  }\n  getOrderTotalPrice() {\n    this.getItemsPrice();\n    this.getShippingPrice();\n    return this.orderTotalPrice = this.itemsPrice + this.shippingPrice;\n  }\n  onSubmit() {\n    const products = this.cartService.clearCart();\n    window.alert('Your order has been submitted');\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n    this.cartService.createOrder(products).subscribe(response => {\n      console.log('Order created successfully', response);\n    }, error => {\n      console.error('Internal Server Error: Order Not Created', error);\n    });\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})], CartComponent);\nexport { CartComponent };","map":{"version":3,"names":["Component","CartComponent","constructor","cartService","formBuilder","currency","items","getItems","itemsPrice","shippingPrice","orderTotalPrice","checkoutForm","group","name","address","getItemsPrice","forEach","item","price","getShippingPrice","getOrderTotalPrice","onSubmit","products","clearCart","window","alert","console","warn","value","reset","createOrder","subscribe","response","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Academique\\Coding\\Web Projects\\E-Commerce website\\Frontend\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { CartService } from '../services/cart.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n  currency = \"TND\"\n  items = this.cartService.getItems();\n  itemsPrice = 0\n  shippingPrice = 0\n  orderTotalPrice = 0\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: FormBuilder,\n  ) { }\n\n  getItemsPrice(): void {\n    this.itemsPrice = 0;\n    this.items.forEach((item) => {\n      this.itemsPrice += item.price;\n    });\n  }\n\n  getShippingPrice(): void {\n    this.shippingPrice = 10\n  }\n\n  getOrderTotalPrice(): number {\n    this.getItemsPrice();\n    this.getShippingPrice();\n    return this.orderTotalPrice = this.itemsPrice + this.shippingPrice;\n  }\n\n  onSubmit(): void {\n    const products = this.cartService.clearCart();\n    window.alert('Your order has been submitted');\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n\n    this.cartService.createOrder(products).subscribe(\n      (response) => {\n        console.log('Order created successfully', response);\n      },\n      (error) => {\n        console.error('Internal Server Error: Order Not Created', error);\n      }\n    );\n  }\n\n  // Fix the refresh page items disappear.\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAWxBC,YACUC,WAAwB,EACxBC,WAAwB;IADxB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IAZrB,KAAAC,QAAQ,GAAG,KAAK;IAChB,KAAAC,KAAK,GAAG,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE;IACnC,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,aAAa,GAAG,CAAC;IACjB,KAAAC,eAAe,GAAG,CAAC;IACnB,KAAAC,YAAY,GAAG,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC;MACpCC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;KACV,CAAC;EAKE;EAEJC,aAAaA,CAAA;IACX,IAAI,CAACP,UAAU,GAAG,CAAC;IACnB,IAAI,CAACF,KAAK,CAACU,OAAO,CAAEC,IAAI,IAAI;MAC1B,IAAI,CAACT,UAAU,IAAIS,IAAI,CAACC,KAAK;IAC/B,CAAC,CAAC;EACJ;EAEAC,gBAAgBA,CAAA;IACd,IAAI,CAACV,aAAa,GAAG,EAAE;EACzB;EAEAW,kBAAkBA,CAAA;IAChB,IAAI,CAACL,aAAa,EAAE;IACpB,IAAI,CAACI,gBAAgB,EAAE;IACvB,OAAO,IAAI,CAACT,eAAe,GAAG,IAAI,CAACF,UAAU,GAAG,IAAI,CAACC,aAAa;EACpE;EAEAY,QAAQA,CAAA;IACN,MAAMC,QAAQ,GAAG,IAAI,CAACnB,WAAW,CAACoB,SAAS,EAAE;IAC7CC,MAAM,CAACC,KAAK,CAAC,+BAA+B,CAAC;IAC7CC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAAChB,YAAY,CAACiB,KAAK,CAAC;IACtE,IAAI,CAACjB,YAAY,CAACkB,KAAK,EAAE;IAEzB,IAAI,CAAC1B,WAAW,CAAC2B,WAAW,CAACR,QAAQ,CAAC,CAACS,SAAS,CAC7CC,QAAQ,IAAI;MACXN,OAAO,CAACO,GAAG,CAAC,4BAA4B,EAAED,QAAQ,CAAC;IACrD,CAAC,EACAE,KAAK,IAAI;MACRR,OAAO,CAACQ,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE,CAAC,CACF;EACH;CAID;AAnDYjC,aAAa,GAAAkC,UAAA,EALzBnC,SAAS,CAAC;EACToC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWrC,aAAa,CAmDzB;SAnDYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}